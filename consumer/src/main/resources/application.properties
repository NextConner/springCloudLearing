## 确定服务提供者名称
spring.application.name=eureka-client-user-consumer
server.port=8093
eureka.client.serviceUrl.defaultZone=http://zoujintao:123456@localhost:8761/eureka/,http://zoujintao:123456@localhost:8762/eureka/
## 注册服务方式 IP注册
eureka.instance.preferIpAddress=true
## 服务实例ID格式
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}

### 暴露服务提供者接口信息
management.endpoints.web.exposure.include=*
### 配置展示信息详情
management.endpoint.health.show-details=ALWAYS
### 配置info展示信息
info.app.name=user-provider-dept-8093

## 开启client 的健康上报
eureka.client.healthcheck.enable = true
## 与注册中心的心跳频率
eureka.instance.lease-renewal-interval-in-seconds = 5
## 心跳间的超时间隔，两次心跳间隔查超过这个限制，移除该服务实例
eureka.instance.lease-expiration-duration-in-seconds = 5

### 自定义元数据 格式为 eureka.instance.metadataMap.自定义键 = 值
#eureka.instance.metadataMap.starter=zjt
#eureka.instance.metadataMap.ender=jtz

#ribbon.eureka.enabled=false
## 禁用 eureka 之后要重新定义服务列表，才能通过服务名称调用
eureka-client-user-provider.ribbon.listOfServers=localhost:8092,localhost:8094
ribbonrule = com.netflix.loadbalancer.
# 配置服务不可达的重试策略
eureka-client-user-provider.ribbon.NFLoadBalancerRuleClassName = ${ribbonrule}RetryRule


## 负载均衡策略   com.netflix.loadbalancer 包下
## BestAvailabl : 选择并发请求（ActiveRequestCount）最小的server
## AvailabilityFilteringRule : 过滤掉不健康的server(连接不稳，标记为 circuit tripped , 高并发 的Server , 检查 Status 里记录的Server 运行状态)
## ZoneAvoidanceRule : 使用 ZoneAvoidancePredicate 和 AvailabilityPredicate 来判断是否选择某个Server 前者判断性能是否可用，后者过滤连接过多的Server
## RandomRule : 随机选择Server
## RoundRobinRule : 轮询选择 , 轮询索引位置，选择索引对应的Server
## RetryRule : 对指定的负载均衡策略机制上进行重试，如果不成功则尝试使用 subRule 选择Server
## ResponseTimeWeightedRule , WeightResponseTimeRule : 根据响应时间分配一个Weight（权重）,相应越长, weight 越小,被选中的可能性越低
### 配置指定服务使用自定义的负载均衡策略
#ribbonrule = com.netflix.loadbalancer.
# 配置服务不可达的重试策略
#eureka-client-user-provider.ribbon.NFLoadBalancerRuleClassName = ${ribbonrule}RetryRule

## ribbon 负载均衡超时设置
# 连接超时
#ribbon.ConnectTimeout = 2000
## 请求处理时间超时
#ribbon.ReadTimeout = 5000

## 标记服务名设置不同的超时时间, 服务名+配置项
#eureka-client-user-provider.ribbon.ConnectTimeout = 2000
#eureka-client-user-provider.ribbon.ReadTimeout = 5000

## ribbon 并发设置
# 最大连接数
#ribbon.MaxTotalConnections = 500
## 每个 host 最大连接数
#ribbon.MaxConnectionsPerHost = 500

